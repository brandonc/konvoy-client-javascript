/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

/**
 * Group search queries for groups given a user entry.
 */
export class IoMesosphereDexV1alpha1ConnectorSpecLdapGroupSearch {
    /**
     * BaseDN to start the search from. It will translate to the query \"(&(objectClass=group)(member=<user uid>))\".
     */
    'baseDN': string;
    /**
     * Optional filter to apply when searching the directory. For example \"(objectClass=posixGroup)\"
     */
    'filter'?: string;
    'groupAttr'?: string;
    /**
     * The attribute of the group that represents its name.
     */
    'nameAttr'?: string;
    /**
     * Can either be: * \"sub\" - search the whole sub tree * \"one\" - only search one level Default to \"sub\" if not specified.
     */
    'scope'?: string;
    /**
     * Following two fields are used to match a user to a group.  It adds an additional requirement to the filter that an attribute in the group match the user\'s attribute value. For example that the \"members\" attribute of a group matches the \"uid\" of the user. The exact filter being added is:   (<groupAttr>=<userAttr value>)
     */
    'userAttr'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
        {
            name: 'baseDN',
            baseName: 'baseDN',
            type: 'string',
        },
        {
            name: 'filter',
            baseName: 'filter',
            type: 'string',
        },
        {
            name: 'groupAttr',
            baseName: 'groupAttr',
            type: 'string',
        },
        {
            name: 'nameAttr',
            baseName: 'nameAttr',
            type: 'string',
        },
        {
            name: 'scope',
            baseName: 'scope',
            type: 'string',
        },
        {
            name: 'userAttr',
            baseName: 'userAttr',
            type: 'string',
        },
    ];

    static getAttributeTypeMap() {
        return IoMesosphereDexV1alpha1ConnectorSpecLdapGroupSearch.attributeTypeMap;
    }
}
