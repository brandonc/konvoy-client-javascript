/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

/**
 * User search queries for users.
 */
export class IoMesosphereDexV1alpha1ConnectorSpecLdapUserSearch {
    /**
     * BaseDN to start the search from. It will translate to the query \"(&(objectClass=person)(uid=<username>))\". For example \"cn=users,dc=example,dc=com\"
     */
    'baseDN': string;
    /**
     * A mapping of attributes on the user entry to the email claim. Default to \"mail\" if not specified.
     */
    'emailAttr'?: string;
    /**
     * If this is set, the email claim of the id token will be constructed from the idAttr and value of emailSuffix. This should not include the @ character.
     */
    'emailSuffix'?: string;
    /**
     * Optional filter to apply when searching the directory. For example \"(objectClass=person)\"
     */
    'filter'?: string;
    /**
     * A mapping of attributes on the user entry to the name claim. Default to \"uid\" if not specified.
     */
    'idAttr'?: string;
    /**
     * Maps to display name of users.
     */
    'nameAttr'?: string;
    /**
     * Can either be: * \"sub\" - search the whole sub tree * \"one\" - only search one level Default to \"sub\" if not specified.
     */
    'scope'?: string;
    /**
     * Username attribute used for comparing user entries. This will be translated and combined with the other filter as \"(<attr>=<username>)\".
     */
    'username': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
        {
            name: 'baseDN',
            baseName: 'baseDN',
            type: 'string',
        },
        {
            name: 'emailAttr',
            baseName: 'emailAttr',
            type: 'string',
        },
        {
            name: 'emailSuffix',
            baseName: 'emailSuffix',
            type: 'string',
        },
        {
            name: 'filter',
            baseName: 'filter',
            type: 'string',
        },
        {
            name: 'idAttr',
            baseName: 'idAttr',
            type: 'string',
        },
        {
            name: 'nameAttr',
            baseName: 'nameAttr',
            type: 'string',
        },
        {
            name: 'scope',
            baseName: 'scope',
            type: 'string',
        },
        {
            name: 'username',
            baseName: 'username',
            type: 'string',
        },
    ];

    static getAttributeTypeMap() {
        return IoMesosphereDexV1alpha1ConnectorSpecLdapUserSearch.attributeTypeMap;
    }
}
